// Derived Variables
//==================
// Note that the gutter is only between the columns, i.e. you have 1 gutter less than columns
$grid-gutters: $grid-columns - 1
// These default settings result in a grid-width of 990 px
$grid-width: $grid-column-width * $grid-columns + $grid-gutter-width * $grid-gutters

// Public Methods
//===============

// Main Grid Helper Methods
//-------------------------
// $colspan should be the number of grid columns. You can override it with a fixed width if you must.
// You can also give a $padding and a $border-width, which is applied to both left and right by default.
// It is ensured that you do not break the grid by setting padding and a border.
// In order to differentiate between left and right padding/border-width you can set $different-right-padding/-border-width.
// Example: +grid(4, 10px, 15px) will set padding-left: 10px, padding-right: 15px and the element will have the same overall width as +grid(4).
// By default, the gutter is represented using margin-right, which can also be overridden.
=column($colspan, $padding: 0, $differing-right-padding: false, $border-width: 0, $differing-right-border-width: false, $gutter: $grid-gutter-width)
  +column-behavior
  +column-metrics($colspan, $padding, $differing-right-padding, $border-width, $differing-right-border-width, $gutter)

// The last column should not have a gutter.
// Respectively, $gutter defaults to 0 in this mixin.
=last-column($colspan, $padding: 0, $differing-right-padding: false, $border-width: 0, $differing-right-border-width: false, $gutter: 0)
  +column($colspan, $padding, $differing-right-padding, $border-width, $differing-right-border-width, $gutter)

// The only difference between the last and other columns is that the last column has margin-right set to 0.
=last
  margin-right: 0

// A row spans the whole grid width, i.e. it is the only column in a row. This is just a more elegant way for writing +last-column($grid-columns).
=row($colspan: $grid-columns, $padding: 0, $differing-right-padding: false, $border-width: 0, $differing-right-border-width: false, $gutter: 0)
  +last-column($colspan, $padding, $differing-right-padding, $border-width, $differing-right-border-width, $gutter)

// Use this mixin for your (none-floating) grid container.
// By default, it spans the whole grid-width and is centered.
// Unlike with columns, paddings and borders of a container do not affect its inner width
=grid-container($colspan: $grid-columns, $padding: 0, $differing-right-padding: false, $border-width: 0, $differing-right-border-width: false, $left-margin: auto, $right-margin: auto)
  +column-metrics($colspan, $padding, $differing-right-padding, $border-width, $differing-right-border-width, $right-margin, true)
  margin-left: $left-margin
  // As this grid system bases on the Float (Nearly) Everything method, this is necessary to enforce the container to enclose its content.
  overflow: hidden

// Internal Methods
//=================
=column-behavior
  float: left
  // This is only for preventing IE6's double margin bug
  display: inline

=column-metrics($column-width, $padding: 0, $differing-right-padding: false, $border-width: 0, $differing-right-border-width: false, $gutter: $grid-gutter-width, $container: false)
  // Convert column counts to widths with unit
  $column-width: colspan-to-width($column-width)
  $padding: colspan-to-width($padding, $include-last-gutter: true)
  $differing-right-padding: colspan-to-width($differing-right-padding, $include-last-gutter: true)
  $border-width: colspan-to-width($border-width, $include-last-gutter: true)
  $differing-right-border-width: colspan-to-width($differing-right-border-width, $include-last-gutter: true)
  @if is_column_count($gutter)
    // It is assumed that the original gutter should also be preserved in addition to the one of the last column
    $gutter: $grid-gutter-width + colspan-to-width($gutter, $include-last-gutter: true)

  // Setting width
  @if $container
    // Paddings and borders do not affect the inner width of a container.
    width: $column-width
  @else
    $padding-sum: left-and-right-sum($padding, $differing-right-padding)
    $border-width-sum: left-and-right-sum($border-width, $differing-right-border-width)
    // Paddings and borders do not affect the outer width of a column.
    width: $column-width - $padding-sum - $border-width-sum

  // Setting other box attributes
  padding:
    left: $padding
    right: right-value($padding, $differing-right-padding)
  border:
    left-width: $border-width
    right-width: right-value($border-width, $differing-right-border-width)
  margin-right: $gutter

@function is_column_count($colspan)
  @if type_of($colspan) == 'number'
    @if unitless($colspan) and $colspan > 0
      @return true
  @return false

@function colspan-to-width($colspan, $include-last-gutter: false)
  @if is_column_count($colspan)
    @return column-count-to-width($colspan, $include-last-gutter)
  @else
    @return $colspan

@function column-count-to-width($column-count, $include-last-gutter: false)
  @if $include-last-gutter
    @return ($grid-column-width + $grid-gutter-width) * $column-count
  @else
    @return $grid-column-width * $column-count + $grid-gutter-width * ($column-count - 1)

// adds to comparable values or doubles the first one
@function left-and-right-sum($value, $differing-right-value)
  @if type-of($differing-right-value) == number
    @if comparable($value, $differing-right-value)
      @return $value + $differing-right-value
  @else
    @return $value * 2

// returns value unless numeric differing-right-value is given
@function right-value($value, $differing-right-value: false)
  @if type-of($differing-right-value) == number
    @return $differing-right-value
  @else
    @return $value

